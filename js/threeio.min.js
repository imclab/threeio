ThreeIO={};ThreeIO.loadMSGPack=function(a,b){require(['msgpack-js'],function(c){var d=new XMLHttpRequest();d.open('GET',a);d.responseType='arraybuffer';d.onload=function(a){var d=c.decode(this.response);b(d);};d.send();});};ThreeIO.loadJSON=function(a,b){var c=new XMLHttpRequest();c.open('GET',a);c.onload=function(){if(c.status==200)b(JSON.parse(c.responseText));else Error(c.statusText);};c.onerror=function(){Error('Network Error');};c.send(null);};ThreeIO.loadTexture=function(a,b){var c=/\.dds$/i;var d=THREE.UVMapping;var e;if(a instanceof Array){var f=(c.test(a[0]))?0:1;var g=[THREE.ImageUtils.loadCompressedTextureCube,THREE.ImageUtils.loadTextureCube];e=g[f](a);}else{var f=(c.test(a))?0:1;var g=[THREE.ImageUtils.loadCompressedTexture,THREE.ImageUtils.loadTexture];e=g[f](a,d);}b(e);};ThreeIO.Loader=function(){this.urlHandlers={};var a=this;this.urlHandlers.geometry=function(a,b){ThreeIO.loadJSON(a.url,function(c){b(c,a.uuid);});};this.urlHandlers.image=function(a,b){ThreeIO.loadTexture(a.url,function(a){b(a);});};};ThreeIO.Loader.prototype.parse=function(a,b){var c={};var d=this;var e=function(c){var e=d.parseMaterials(a.materials,c);var f={};d.parseGeometries(a.geometries,function(c){f[c.uuid]=c;var g=Object.keys(f).length;if(g==a.geometries.length){var h=d.parseObject(a.object,f,e);b(h);}});};if(a.textures!==undefined&&a.textures.length>0){this.parseTextures(a,function(b){c[b.uuid]=b;var d=Object.keys(c).length;if(d==a.textures.length)e(c);});}else e();};ThreeIO.Loader.prototype.parseObject=function(){var a=new THREE.Matrix4();var b=[];return function(c,d,e){var f;switch(c.type){case 'Scene':f=new THREE.Scene();break;case 'AreaLight':f=new THREE.AreaLight(c.color,c.intensity);b=['height','width','linearAttenuation','constantAttenuation','quadraticAttenuation'];break;case 'PerspectiveCamera':f=new THREE.PerspectiveCamera(c.fov,c.aspect,c.near,c.far);break;case 'OrthographicCamera':f=new THREE.OrthographicCamera(c.left,c.right,c.top,c.bottom,c.near,c.far);break;case 'AmbientLight':f=new THREE.AmbientLight(c.color);break;case 'DirectionalLight':f=new THREE.DirectionalLight(c.color,c.intensity);b=['onlyShadow','shadowCameraNear','shadowCameraFar','shadowCameraLeft','shadowCameraRight','shadowCameraTop','shadowCameraBottom','shadowCameraVisible','shadowBias','shadowDarkness','shadowMapWidth','shadowMapHeight','shadowCascade','shadowCascadeCount','shadowMap','shadowMapSize','shadowCamera'];break;case 'PointLight':f=new THREE.PointLight(c.color,c.intensity,c.distance);break;case 'SpotLight':f=new THREE.SpotLight(c.color,c.intensity,c.distance,c.angle,c.exponent);b=['onlyShadow','shadowCameraNear','shadowCameraFar','shadowCameraFov','shadowCameraVisible','shadowBias','shadowDarkness','shadowMapWidth','shadowMapHeight','shadowBias','shadowMapSize','shadowCamera','shadowMap'];break;case 'HemisphereLight':f=new THREE.HemisphereLight(c.color,c.groundColor,c.intensity);break;case 'Mesh':var g=d[c.geometry];var h=e[c.material];if(g===undefined)console.error('ThreeIO: Undefined geometry '+c.geometry);if(h===undefined)console.error('ThreeIO: Undefined material '+c.material);f=new THREE.Mesh(g,h);break;case 'Sprite':var h=e[c.material];if(h===undefined)console.error('ThreeIO: Undefined material '+c.material);f=new THREE.Sprite(h);break;default:f=new THREE.Object3D();}f.uuid=c.uuid;var i=['name','visible','userData','receiveShadow','castShadow'];var j=i.concat(b);for(i=0;i<j.length;i++){var k=j[i];if(c[k]!==undefined)f[k]=c[k];}if(c.matrix!==undefined){a.fromArray(c.matrix);a.decompose(f.position,f.quaternion,f.scale);}else{if(c.position!==undefined)f.position.fromArray(c.position);if(c.rotation!==undefined)f.rotation.fromArray(c.rotation);if(c.scale!==undefined)f.scale.fromArray(c.scale);}if(c.children!==undefined)for(var l in c.children)f.add(this.parseObject(c.children[l],d,e));return f;};}();ThreeIO.Loader.prototype.parseGeometries=function(a,b){var c=new THREE.JSONLoader();for(i=0;i<a.length;i++){var d=a[i];if(d.data!==undefined){var e=c.parse(d.data).geometry;e.uuid=d.uuid;if(d.name!==undefined)e.name=d.name;b(e);}else if(d.url!==undefined){var f=d.uuid;this.urlHandlers.geometry(d,function(a,d){var e=c.parse(a).geometry;e.uuid=d;if(a.name!==undefined)e.name=a.name;b(e);});}else console.error('unrecognized geometry definitions');}};ThreeIO.Loader.prototype.parseMaterials=function(a,b){var c={};var d=['map','lightMap','specularMap','bumpMap','normalMap'];var e=['bumpScale','normalScale'];var f=new THREE.MaterialLoader();for(i=0;i<a.length;i++){var g=a[i];var h=f.parse(g);h.uuid=g.uuid;if(g.name!==undefined)h.name=g.name;c[g.uuid]=h;if(b===undefined)continue;for(j=0;j<d.length;j++){if(g[d[j]]===undefined)continue;var i=g[d[j]];h[d[j]]=b[i];for(k=0;k<e.length;k++){var j=e[k];if(g[j]===undefined)continue;h[j]=g[j];}}}return c;};ThreeIO.Loader.prototype.parseTextures=function(a,b){var c=this.urlHandlers.image;var d=['anisotropy','name','flipY'];var e=['repeat','offset'];var f=['mapping','magFilter','minFilter'];var g=function(a,c){a.uuid=c.uuid;for(k=0;k<d.length;k++){var g=d[k];if(c[g]!==undefined)a[g]=c[g];}for(k=0;k<f.length;k++){var h=f[k];if(c[h]!==undefined){var g=THREE[h];a[g]=c[g];}}for(k=0;k<e.length;k++){var h=e[k];if(c[h]!==undefined){var i=c[h];a[h].set(i[0],i[1]);}}if(c.wrap!==undefined){a.wrapS=THREE[c.wrap[0]];a.wrapT=THREE[c.wrap[1]];}b(a);};for(i=0;i<a.textures.length;i++){var h=a.textures[i];for(j=0;j<a.images.length;j++){var i=a.images[j];if(i.uuid!=h.image)continue;c(i,function(a){g(a,h);});break;}}};