ThreeIO={};ThreeIO.jsonParser=function(e,t){var n=new XMLHttpRequest;n.open("GET",e);n.onload=function(){if(n.status==200){t(JSON.parse(n.responseText))}else{Error(n.statusText)}};n.onerror=function(){Error("Network Error")};n.send(null)};ThreeIO.loadTexture=function(e,t){var n=/\.dds$/i;var r=THREE.UVMapping;var i;if(e instanceof Array){var s={"true":THREE.ImageUtils.loadCompressedTextureCube,"false":THRE.ImageUtils.loadTextureCube};i=s[n.test(e[0])](e)}else{var s={"true":THREE.ImageUtils.loadCompressedTexture,"false":THREE.ImageUtils.loadTexture};i=s[n.test(e)](e,r)}t(i)};ThreeIO.Loader=function(){this._urlHandlers={};var e=this;this._urlHandlers["geometry"]=function(e,t){ThreeIO.jsonParser(e.url,function(n){t(n,e.uuid)})};this._urlHandlers["image"]=function(e,t){ThreeIO.loadTexture(e.url,function(e){t(e)})}};ThreeIO.Loader.prototype.parse=function(e,t){var n={};var r=this;var i=function(n){var i=r.parseMaterials(e.materials,n);var s={};r.parseGeometries(e.geometries,function(n){s[n.uuid]=n;var o=Object.keys(s).length;if(o==e.geometries.length){var u=r.parseObject(e.object,s,i);t(u)}})};if(e.textures!==undefined&&e.textures.length>0){this.parseTextures(e,function(t){n[t.uuid]=t;var r=Object.keys(n).length;if(r==e.textures.length){i(n)}})}else{i()}};ThreeIO.Loader.prototype.parseObject=function(){var e=new THREE.Matrix4;var t=[];return function(n,r,s){var o;switch(n.type){case"Scene":o=new THREE.Scene;break;case"AreaLight":o=new THREE.AreaLight(n.color,n.intensity);t=["height","width","linearAttenuation","constantAttenuation","quadraticAttenuation"];break;case"PerspectiveCamera":o=new THREE.PerspectiveCamera(n.fov,n.aspect,n.near,n.far);break;case"OrthographicCamera":o=new THREE.OrthographicCamera(n.left,n.right,n.top,n.bottom,n.near,n.far);break;case"AmbientLight":o=new THREE.AmbientLight(n.color);break;case"DirectionalLight":o=new THREE.DirectionalLight(n.color,n.intensity);t=["onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapWidth","shadowMapHeight","shadowCascade","shadowCascadeCount","shadowMap","shadowMapSize","shadowCamera"];break;case"PointLight":o=new THREE.PointLight(n.color,n.intensity,n.distance);break;case"SpotLight":o=new THREE.SpotLight(n.color,n.intensity,n.distance,n.angle,n.exponent);t=["onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraFov","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapWidth","shadowMapHeight","shadowBias","shadowMapSize","shadowCamera","shadowMap"];break;case"HemisphereLight":o=new THREE.HemisphereLight(n.color,n.groundColor,n.intensity);break;case"Mesh":var u=r[n.geometry];var a=s[n.material];if(u===undefined){console.error("ThreeIO: Undefined geometry "+n.geometry)}if(a===undefined){console.error("ThreeIO: Undefined material "+n.material)}o=new THREE.Mesh(u,a);break;case"Sprite":var a=s[n.material];if(a===undefined){console.error("ThreeIO: Undefined material "+n.material)}o=new THREE.Sprite(a);break;default:o=new THREE.Object3D}o.uuid=n.uuid;var f=["name","visible","userData","receiveShadow","castShadow"];var l=f.concat(t);for(i=0;i<l.length;i++){var c=l[i];if(n[c]!==undefined){o[c]=n[c]}}if(n.matrix!==undefined){e.fromArray(n.matrix);e.decompose(o.position,o.quaternion,o.scale)}else{if(n.position!==undefined)o.position.fromArray(n.position);if(n.rotation!==undefined)o.rotation.fromArray(n.rotation);if(n.scale!==undefined)o.scale.fromArray(n.scale)}if(n.children!==undefined){for(var h in n.children){o.add(this.parseObject(n.children[h],r,s))}}return o}}();ThreeIO.Loader.prototype.parseGeometries=function(e,t){var n=new THREE.JSONLoader;for(i=0;i<e.length;i++){var r=e[i];if(r.data!==undefined){var s=n.parse(r.data).geometry;s.uuid=r.uuid;if(r.name!==undefined)s.name=r.name;t(s)}else if(r.url!==undefined){var o=r.uuid;this._urlHandlers.geometry(r,function(e,r){var i=n.parse(e).geometry;i.uuid=r;if(e.name!==undefined)i.name=e.name;t(i)})}else{console.error("unrecognized geometry definitions")}}};ThreeIO.Loader.prototype.parseMaterials=function(e,t){var n={};var r=["map","lightMap","specularMap","bumpMap","normalMap"];var s=["bumpScale","normalScale"];var o=new THREE.MaterialLoader;for(i=0;i<e.length;i++){var u=e[i];var a=o.parse(u);a.uuid=u.uuid;if(u.name!==undefined)a.name=u.name;n[u.uuid]=a;if(t===undefined)continue;for(j=0;j<r.length;j++){if(u[r[j]]===undefined)continue;var f=u[r[j]];a[r[j]]=t[f];for(k=0;k<s.length;k++){var l=s[k];if(u[l]===undefined)continue;a[l]=u[l]}}}return n};ThreeIO.Loader.prototype.parseTextures=function(e,t){var n=this._urlHandlers.image;var r=["anisotropy","name","flipY"];var s=["repeat","offset"];var o=["mapping","magFilter","minFilter"];var u=function(e,n){e["uuid"]=n.uuid;for(k=0;k<r.length;k++){var i=r[k];if(n[i]!==undefined){e[i]=n[i]}}for(k=0;k<o.length;k++){var u=o[k];if(n[u]!==undefined){var i=THREE[u];e[i]=n[i]}}for(k=0;k<s.length;k++){var u=s[k];if(n[u]!==undefined){var a=n[u];e[u].set(a[0],a[1])}}if(n.wrap!==undefined){e.wrapS=THREE[n.wrap[0]];e.wrapT=THREE[n.wrap[1]]}t(e)};for(i=0;i<e.textures.length;i++){var a=e.textures[i];for(j=0;j<e.images.length;j++){var f=e.images[j];if(f.uuid!=a.image)continue;n(f,function(e){u(e,a)});break}}}
